apiVersion: v1
kind: PersistentVolume
metadata:
  name: backend-api-lesson-dev-pv
spec:
  storageClassName: ""
  capacity:
    storage: 100G
  accessModes:
    - ReadWriteOnce
  gcePersistentDisk:
    pdName: lesson-backend-dev-disk
---
apiVersion: v1
kind : PersistentVolumeClaim
metadata:
  name: backend-api-lesson-dev-pvc
spec:
  storageClassName: ""
  volumeName: backend-api-lesson-dev-pv
  accessModes:
    - ReadWriteOnce
  # 백엔드가 요청할 볼륨의 리소스
  resources:
    requests:
      storage: 100G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api-lesson-dev
spec:
  selector:
    # Deployment 오브젝트가 파드를 관리할 때 사용하는 매핑 정보
    matchLabels:
      app: backend-api-lesson-dev
  template:
    metadata:
      # 생설될 파드의 라벨 정보
      labels:
        app: backend-api-lesson-dev
    spec:
      containers:
      - name: backend-api-lesson-dev-app
        image: gcr.io/<PROJECT_ID>/<DOCKER_IMAGE_NAME>:<DOCKER_IMAGE_TAG>
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/healthz
            port: 8080
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: 8080
        volumeMounts:
          - name: backend-api-lesson-dev-uploads
            mountPath: /var/www/uploads
      volumes:
      - name: backend-api-lesson-dev-uploads
        persistentVolumeClaim:
          claimName: backend-api-lesson-dev-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend-api-lesson-dev-svc
spec:
  selector:
    app: backend-api-lesson-dev
  type: NodePort
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080